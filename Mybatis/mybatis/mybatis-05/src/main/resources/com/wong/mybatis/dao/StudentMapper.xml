<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
       PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
       "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
       <!-- MyBatis核心配置文件 -->
<mapper namespace="com.wong.mybatis.dao.StudentMapper">
<!-- =============Method-1  子查询 （按照查询嵌套）================ -->
<!--
   需求：获取所有学生及对应老师的信息
   思路：
       1. 获取所有学生的信息
       2. 根据获取的学生信息的老师ID->获取该老师的信息
       3. 思考问题，这样学生的结果集中应该包含老师，该如何处理呢，数据库中我们一般使用关联查询？
           1. 做一个结果集映射：StudentTeacher
           2. StudentTeacher结果集的类型为 Student
           3. 学生中老师的属性为teacher，对应数据库中为tid。
              多个 [1,...）学生关联一个老师=> 一对一，一对多
           4. 查看官网找到：association – 一个复杂类型的关联；使用它来处理关联查询
   -->
	<select id="getStudents" resultMap="StudentTeacher">
    	select * from student
   </select>
   <resultMap id="StudentTeacher" type="com.wong.mybatis.pojo.Student">
   		<result property="id"  column="id"/><!-- 字段 -->
   		<result property="name"  column="name"/><!-- 字段 -->
   		<!--
   		复杂的属性，我们需要单独处理 
   		對象：association 
   		集合：collection
    	javaType=""指定属性的类型！
	    集合中的泛型信息，我们使用ofType获取
	    -->
	    <!--association关联属性 property属性名 javaType属性类型 column在多的一方的表中的列名-->
	    <!-- property="pojo 中 class 對應變量名稱" -->
	    <!-- select=" 要關聯的 select 標籤中的 id 名稱" -->
    	<association property="teacher"  column="tid" javaType="com.wong.mybatis.pojo.Teacher" select="getTeacher"/><!-- 對象 -->
   </resultMap>
      <!--
   这里传递过来的id，只有一个属性的时候，下面可以写任何值
   association中column多参数配置：
       column="{key=value,key=value}"
       其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。
   -->
   <select id="getTeacher" resultType="com.wong.mybatis.pojo.Teacher">
      select * from teacher where id = #{tid}
   </select>
   
<!-- ================== Method-2  联表查询 （按照结果嵌套） ===================== -->
   <!--
	按查询结果嵌套处理
	思路：
	   1. 直接查询出结果，进行结果集的映射
	-->
   <select id="getStudent2" resultMap="StudentTeacher2">
   			<!-- s.id=表名.column sid=自己取的別名 -->
   		 select s.id sid, s.name sname , t.name tname
		 from student s,teacher t
		 where s.tid = t.id
   </select>
   <!--结果封装，将查询出来的列封装到对象属性中-->
   <resultMap id="StudentTeacher2" type="com.wong.mybatis.pojo.Student">
	   <result property="id" column="sid"/>
	   <result property="name" column="sname"/>
	   <!--关联对象property 关联对象在Student实体类中的属性-->
	   <association property="teacher" javaType="com.wong.mybatis.pojo.Teacher">
	       <result property="name" column="tname"/>
   	   </association>
   </resultMap>
</mapper>