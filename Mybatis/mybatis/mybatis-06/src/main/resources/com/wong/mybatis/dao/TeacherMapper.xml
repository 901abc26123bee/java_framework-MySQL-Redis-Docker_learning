<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
       PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
       "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
       <!-- MyBatis核心配置文件 -->
<mapper namespace="com.wong.mybatis.dao.TeacherMapper">
<!--======================联表查询 （按照结果嵌套）=======================-->
 	<!--
   思路:
       1. 从学生表和老师表中查出学生id，学生姓名，老师姓名
       2. 对查询出来的操作做结果集映射
           1. 集合的话，使用collection！
               JavaType和ofType都是用来指定对象类型的
               JavaType是用来指定pojo中属性的类型
               ofType指定的是映射到list集合属性中pojo的类型。
   -->
	<select id="getTeacher" resultMap="TeacherStudent">
		  select s.id sid, s.name sname , t.name tname, t.id tid
	      from student s,teacher t
	      where s.tid = t.id and t.id=#{tid}
	</select>
	
	<resultMap id="TeacherStudent" type="com.wong.mybatis.pojo.Teacher" >
		   <result  property="name" column="tname"/>
		   <!--复杂的属性，我们需要单独处理 对象：association 集合：collection
		    javaType=""指定属性的类型！
		    集合中的泛型信息，我们使用ofType获取
		    -->
	       <collection property="students" ofType="com.wong.mybatis.pojo.Student">
	       <!-- property="pojo 中變量名稱   column="sql查表名稱" -->
	           <result property="propertyid" column="sid" />
	           <result property="name" column="sname" />
	           <result property="tid" column="tid" />
	       </collection>
	</resultMap>
	
<!-- =======================子查询 （按照查询嵌套）=============================== -->
	<select id="getTeacher2" resultMap="TeacherStudent2">
		select * from mybatis.teacher where id=#{tttid}
	</select>
	<resultMap id="TeacherStudent2" type="com.wong.mybatis.pojo.Teacher" >
		<collection property="students" javaType="ArrayList" 
			ofType="com.wong.mybatis.pojo.Student" select="getStudentByTeacherId" column="id">
			<!-- [column="id"] match the sql [#{id}] in [select id="getStudentByTeacherId"]-->
		</collection>
	</resultMap>
	
	<select id="getStudentByTeacherId" resultType="com.wong.mybatis.pojo.Student">
		select * from mybatis.student where tid=#{id}
	</select>
</mapper>